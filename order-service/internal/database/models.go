// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"
)

type PreGoTicketOrderDetail05202599999SeatClass string

const (
	PreGoTicketOrderDetail05202599999SeatClassECONOMY  PreGoTicketOrderDetail05202599999SeatClass = "ECONOMY"
	PreGoTicketOrderDetail05202599999SeatClassBUSINESS PreGoTicketOrderDetail05202599999SeatClass = "BUSINESS"
	PreGoTicketOrderDetail05202599999SeatClassFIRST    PreGoTicketOrderDetail05202599999SeatClass = "FIRST"
)

func (e *PreGoTicketOrderDetail05202599999SeatClass) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PreGoTicketOrderDetail05202599999SeatClass(s)
	case string:
		*e = PreGoTicketOrderDetail05202599999SeatClass(s)
	default:
		return fmt.Errorf("unsupported scan type for PreGoTicketOrderDetail05202599999SeatClass: %T", src)
	}
	return nil
}

type NullPreGoTicketOrderDetail05202599999SeatClass struct {
	PreGoTicketOrderDetail05202599999SeatClass PreGoTicketOrderDetail05202599999SeatClass
	Valid                                      bool // Valid is true if PreGoTicketOrderDetail05202599999SeatClass is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPreGoTicketOrderDetail05202599999SeatClass) Scan(value interface{}) error {
	if value == nil {
		ns.PreGoTicketOrderDetail05202599999SeatClass, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PreGoTicketOrderDetail05202599999SeatClass.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPreGoTicketOrderDetail05202599999SeatClass) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PreGoTicketOrderDetail05202599999SeatClass), nil
}

// Table for ticket orders
type PreGoOrder05202599999 struct {
	// Primary key
	ID int32
	// Order number
	OrderNumber string
	// User ID
	UserID int64
	// Station code
	StationCode string
	// Order amount
	OrderAmount string
	// Terminal ID
	TerminalID int64
	// Order date
	OrderDate time.Time
	// Order notes
	OrderNotes string
	// Order items
	OrderItem json.RawMessage
	// Last update time
	UpdatedAt time.Time
	// Creation time
	CreatedAt time.Time
}

// Pre Go Ticket Order Details Table
type PreGoTicketOrderDetail05202599999 struct {
	// Primary key
	ID int32
	// Ticket item ID
	TicketItemID int64
	// Reference order number
	OrderNumber string
	// Passenger name
	PassengerName string
	// Departure station
	DepartureStation string
	// Arrival station
	ArrivalStation string
	// Departure time
	DepartureTime time.Time
	// Passenger ID
	PassengerID int64
	// Seat class
	SeatClass PreGoTicketOrderDetail05202599999SeatClass
	// Ticket price
	TicketPrice string
	// Seat number
	SeatNumber string
	// Last update time
	UpdatedAt time.Time
	// Creation time
	CreatedAt time.Time
}
